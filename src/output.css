/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary: #005686;
    --color-secondary: #0077B9;
    --color-text: #FFFFFF;
    --h1-size: clamp(40px, calc(40px + 8 * ((100vw - 390px) / 378)), 48px);
    --h2-size: clamp(30px, calc(30px + 6 * ((100vw - 390px) / 378)), 36px);
    --h3-size: clamp(24px, calc(24px + 8 * ((100vw - 390px) / 378)), 32px);
    --h4-size: clamp(20px, calc(20px + 6 * ((100vw - 390px) / 378)), 26px);
    --h5-size: clamp(18px, calc(18px + 2 * ((100vw - 390px) / 378)), 20px);
    --h6-size: clamp(16px, calc(16px + 2 * ((100vw - 390px) / 378)), 18px);
    --container-px: clamp(20px, calc(20px + (40 - 20) * ((100vw - 390px) / (768 - 390))), 40px);
    --container-py: clamp(38px, calc(38px + (70 - 38) * ((100vw - 390px) / (768 - 390))), 70px);
    --nav-px: clamp(8px, calc(8px + (20 - 8) * ((100vw - 390px) / (768 - 390))), 20px);
    --p-size: 14px;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-\[clamp\(50px\,10vw\,120px\)\] {
    margin-top: clamp(50px, 10vw, 120px);
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-full {
    height: 100%;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-9\/10 {
    width: calc(9/10 * 100%);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-165 {
    max-width: calc(var(--spacing) * 165);
  }
  .max-w-480 {
    max-width: calc(var(--spacing) * 480);
  }
  .min-w-320 {
    min-width: calc(var(--spacing) * 320);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-5 {
    --tw-translate-x: calc(var(--spacing) * -5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-6 {
    --tw-translate-x: calc(var(--spacing) * -6);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }
  .gap-22 {
    gap: calc(var(--spacing) * 22);
  }
  .gap-22\.5 {
    gap: calc(var(--spacing) * 22.5);
  }
  .gap-\[55px\] {
    gap: 55px;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-secondary {
    border-color: var(--color-secondary);
  }
  .border-secondary\/50 {
    border-color: color-mix(in srgb, #0077B9 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-secondary) 50%, transparent);
    }
  }
  .border-text {
    border-color: var(--color-text);
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-primary\/50 {
    background-color: color-mix(in srgb, #005686 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 50%, transparent);
    }
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-\[clamp\(16px\,3vw\,30px\)\] {
    padding-inline: clamp(16px, 3vw, 30px);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-\[clamp\(14px\,6vh\,21px\)\] {
    padding-block: clamp(14px, 6vh, 21px);
  }
  .pt-\[clamp\(16px\,2vh\,30px\)\] {
    padding-top: clamp(16px, 2vh, 30px);
  }
  .pt-\[var\(--container-py\)\] {
    padding-top: var(--container-py);
  }
  .pb-\[clamp\(50px\,8vw\,80\)\] {
    padding-bottom: clamp(50px, 8vw, 80);
  }
  .pb-\[clamp\(50px\,8vw\,80px\)\] {
    padding-bottom: clamp(50px, 8vw, 80px);
  }
  .text-center {
    text-align: center;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[8px\] {
    font-size: 8px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-text {
    color: var(--color-text);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .hover\:bg-primary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:w-fit {
    @media (width >= 48rem) {
      width: fit-content;
    }
  }
  .md\:max-w-9\/10 {
    @media (width >= 48rem) {
      max-width: calc(9/10 * 100%);
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .lg\:text-base {
    @media (width >= 64rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .lg\:text-sm {
    @media (width >= 64rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:hidden {
    @media (width >= 80rem) {
      display: none;
    }
  }
  .xl\:text-lg {
    @media (width >= 80rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .xl\:text-sm {
    @media (width >= 80rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .\32 xl\:max-w-265\.5 {
    @media (width >= 96rem) {
      max-width: calc(var(--spacing) * 265.5);
    }
  }
}
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&display=swap');
body {
  font-family: "DM Sans", sans-serif;
}
@media (min-width: 768px) {
  :root {
    --h1-size: clamp(48px, calc(48px + 24 * ((100vw - 768px) / 512)), 72px);
  }
}
@media (min-width: 1280px) {
  :root {
    --h1-size: clamp(72px, calc(72px + 24 * ((100vw - 1280px) / 256)), 96px);
  }
}
@media (min-width: 1536px) {
  :root {
    --h1-size: 96px;
  }
}
@media (min-width: 768px) {
  :root {
    --h2-size: clamp(36px, calc(36px + 12 * ((100vw - 768px) / 512)), 48px);
  }
}
@media (min-width: 1280px) {
  :root {
    --h2-size: clamp(48px, calc(48px + 12 * ((100vw - 1280px) / 256)), 60px);
  }
}
@media (min-width: 1536px) {
  :root {
    --h2-size: 60px;
  }
}
@media (min-width: 768px) {
  :root {
    --h3-size: clamp(30px, calc(30px + 6 * ((100vw - 768px) / 512)), 36px);
  }
}
@media (min-width: 1280px) {
  :root {
    --h3-size: clamp(36px, calc(36px + 12 * ((100vw - 1280px) / 256)), 48px);
  }
}
@media (min-width: 1536px) {
  :root {
    --h3-size: 48px;
  }
}
@media (min-width: 768px) {
  :root {
    --h4-size: clamp(26px, calc(26px + 4 * ((100vw - 768px) / 512)), 30px);
  }
}
@media (min-width: 1280px) {
  :root {
    --h4-size: clamp(30px, calc(30px + 6 * ((100vw - 1280px) / 256)), 36px);
  }
}
@media (min-width: 1536px) {
  :root {
    --h4-size: 36px;
  }
}
@media (min-width: 768px) {
  :root {
    --h5-size: clamp(20px, calc(20px + 4 * ((100vw - 768px) / 512)), 24px);
  }
}
@media (min-width: 1280px) {
  :root {
    --h5-size: 24px;
  }
}
@media (min-width: 1536px) {
  :root {
    --h5-size: 24px;
  }
}
@media (min-width: 768px) {
  :root {
    --h6-size: clamp(18px, calc(18px + 2 * ((100vw - 768px) / 512)), 20px);
  }
}
@media (min-width: 1280px) {
  :root {
    --h6-size: 20px;
  }
}
@media (min-width: 1536px) {
  :root {
    --h6-size: 20px;
  }
}
@media (min-width: 768px) {
  :root {
    --container-px: clamp(40px,
                calc(40px + (60 - 40) * ((100vw - 768px) / (1280 - 768))),
                60px);
    --container-py: clamp(70px,
                calc(70px + (80 - 70) * ((100vw - 768px) / (1280 - 768))),
                80px);
    --nav-px: clamp(20px,
                calc(20px + (36 - 20) * ((100vw - 768px) / (1280 - 768))),
                36px);
  }
}
@media (min-width: 1280px) {
  :root {
    --container-px: clamp(60px,
                calc(60px + (150 - 60) * ((100vw - 1280px) / (1680 - 1280))),
                150px);
    --container-py: clamp(80px,
                calc(80px + (90 - 80) * ((100vw - 1280px) / (1680 - 1280))),
                90px);
    --nav-px: clamp(36px,
                calc(36px + (126 - 36) * ((100vw - 1280px) / (1680 - 1280))),
                126px);
  }
}
@media (min-width: 1680px) {
  :root {
    --container-px: clamp(150px,
                calc(150px + (200 - 150) * ((100vw - 1680px) / (1920 - 1680))),
                200px);
    --container-py: clamp(90px,
                calc(90px + (100 - 90) * ((100vw - 1680px) / (1920 - 1680))),
                100px);
    --nav-px: clamp(126px,
                calc(126px + (170 - 126) * ((100vw - 1680px) / (1920 - 1680))),
                170px);
  }
}
@media (min-width: 390px) {
  :root {
    --p-size: clamp(14px, calc(14px + (16 - 14) * ((100vw - 390px) / (768 - 390))),16px
    );
  }
}
@media (min-width: 768px) {
  :root {
    --p-size: 16px;
  }
}
@media (min-width: 1280px) {
  :root {
    --p-size: clamp(16px, calc(16px + (18 - 16) * ((100vw - 1280px) / (1536 - 1280))), 18px);
  }
}
@media (min-width: 1536px) {
  :root {
    --p-size: 18px;
  }
}
@layer utilities {
  .text-h1 {
    font-size: var(--h1-size);
    line-height: var(--h1-line-height);
  }
  .text-h2 {
    font-size: var(--h2-size);
    line-height: var(--h2-line-height);
  }
  .text-h3 {
    font-size: var(--h3-size);
    line-height: var(--h3-line-height);
  }
  .text-h4 {
    font-size: var(--h4-size);
    line-height: var(--h4-line-height);
  }
  .text-h5 {
    font-size: var(--h5-size);
    line-height: var(--h5-line-height);
  }
  .text-h6 {
    font-size: var(--h6-size);
    line-height: var(--h6-line-height);
  }
  .container-px {
    padding-left: var(--container-px);
    padding-right: var(--container-px);
  }
  .container-py {
    padding-top: var(--container-py);
    padding-bottom: var(--container-py);
  }
  .nav-px {
    padding-left: var(--nav-px);
    padding-right: var(--nav-px);
  }
  .text-para {
    font-size: var(--p-size);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
